Here are the description of each functions and their routes and how to properly use them

1. '/' - this is the home page, when you first click or type in the link you'll see an instruction of what to do next.

2. '/<string:password>' - this is where you'll type in your password. If your password is correct you'll see a dictionary of GET, POST, PUT, DELETE, and their corresponding url.

3. '/employee' - this is where you'll see the content or values of the employee table in json format as deafult from the mysql database.
3.1. '/employee?format=json' return the employee table values in json format
3.2. '/employee?format=xml' return the employee table values in xml format

4. '/employee/<int:emp_id>' - here you'll need to specify an id, the format for typing the url is "/employee/100", this will fetch you the specific employee with the id and show you the details that employee has as a json format as deafult
4.1. '/employee/<int:emp_id>?format=json' return the employee value in json format
4.2. '/employee/<int:emp_id>?format=xml' return the employee value in xml format
4.3 EXAMPLE: /employee/100?format=xml

5. '/employee/add' - this is where you'll add employees to the table, the format for constructing the employee details is this is:
{
    
    "birth_day": "YYYY-MM-DD", >> 1999-09-09
    "branch_id": "INT PRIMARY KEY", >> only options are 1, 2, or 3
    "emp_id": "INTEGER", >> unique id that isn't in the database yet
    "first_name": "Juan",
    "last_name": "Dela Cruz",
    "salary": "INTEGER", >> 30000
    "sex": "M or F"
}
6. '/employee/update' - this is where you'll change the details of an existing employee in the table, the format is:
{
    "birth_day": "YYYY-MM-DD", >> 1999-09-09
    "branch_id": "INT PRIMARY KEY", >> only options are 1, 2, or 3
    "emp_id": "INTEGER", >> unique id that isn't in the database yet
    "first_name": "Maritez",
    "last_name": "Dela Cruz",
    "salary": "INTEGER", >> 30000
    "sex": "M or F"
}

7. '/delete/<int:emp_id>' this is where you get to delete an employee from the table, the way this works is you have to specify the id at <int:emp_id>
7.1. EXAMPLE: /delete/190

NOTE that in this type of programs you have to double check the spelling and formats of what you input for the reason that url is case sensitive and character vigilant meaning that if you put even a single white space at the wrong order you'll be met with an error so do be vigilant.